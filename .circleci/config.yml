version: 2
references:
  default_job_config: &default_job_config
    working_directory: ~/tmp
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: rails-react-workshop
          RAILS_ENV: test
          BUNDLE_PATH: ~/tmp/vendor/bundle
          BUNDLE_APP_CONFIG: ~/tmp/vendor/bundle
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: rails-react-workshop
          POSTGRES_DB: rails-react-workshop-dev
          POSTGRES_PASSWORD: ""

jobs:
  bundle:
    <<: *default_job_config
    steps:
      - checkout

      - run: cp config/database.yml.template config/database.yml

      - restore_cache:
          keys:
            - gem-cache-{{ arch }}--{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run: bundle install --without=development --jobs=4 --retry=3

      - save_cache:
          key: gem-cache-{{ arch }}--{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/tmp/vendor/bundle

      - persist_to_workspace:
          root: .
          paths:
            - .

  rubocop:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: ~/tmp
      - run: bundle exec rubocop --config .rubocop.yml

  bundle_audit:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: ~/tmp
      - run: bundle exec bundle-audit

  rspec:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: ~/tmp

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 2m

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run: bundle exec rake db:test:prepare

      - run:
          shell: /bin/bash -eo pipefail -O globstar
          name: rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format documentation \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: /tmp/test-results

  release_stage:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Deploy Develop to Staging
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_STAGING.git develop:master

  release_prod:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: ~/tmp
      - run:
          name: Deploy Master to Production
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_PRODUCTION.git master

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - bundle

      - rubocop:
          requires:
            - bundle

      - bundle_audit:
          requires:
            - bundle

      - rspec:
          requires:
            - bundle

      - release_stage:
          requires:
            - bundle_audit
            - rspec
            - rubocop
          filters:
            branches:
              only:
                - develop

      - release_prod:
          requires:
            - bundle_audit
            - rspec
            - rubocop
          filters:
            branches:
              only:
                - master
